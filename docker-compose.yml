version: '3.8'
services:
  database:
    image: postgres:17
    container_name: task-postgres
    environment:
      POSTGRES_DB: task
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - 5432
    networks:
      - backend
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  application:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: task
    depends_on:
      - database
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/task
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - backend
    expose:
      - 8080
    ports:
      - "8080:8080"

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console (web UI)
    environment:
      MINIO_ROOT_USER: adminio
      MINIO_ROOT_PASSWORD: ZvR2QeNczGlsjfza
    volumes:
      - minio_data:/data
      - minio_config:/root/.minio
    command: server /data --console-address ":9001"
    networks:
      - backend
    expose:
      - 9000
      - 9001

volumes:
  db_data:
  minio_data:
  minio_config:

networks:
  backend:
